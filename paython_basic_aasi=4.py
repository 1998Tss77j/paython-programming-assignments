# -*- coding: utf-8 -*-
"""paython basic aasi=4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1krHsOkljloshrFfEn0_MJd4HY1yUEiGI
"""



"""1. Write a Python Program to Find the Factorial of a Number?"""

def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

try:
    num = int(input("Enter a non-negative integer to find its factorial: "))
    if num < 0:
        print("Factorial is not defined for negative numbers.")
    else:
        result = factorial(num)
        print(f"The factorial of {num} is {result}")
except ValueError:
    print("Invalid input. Please enter a valid non-negative integer.")

"""2. Write a Python Program to Display the multiplication Table?"""

def multiplication_table(number, limit):
    for i in range(1, limit + 1):
        result = number * i
        print(f"{number} x {i} = {result}")

try:
    num = int(input("Enter a number for which you want to display the multiplication table: "))
    table_limit = int(input("Enter the limit for the multiplication table: "))
    multiplication_table(num, table_limit)
except ValueError:
    print("Invalid input. Please enter valid integers.")

"""3. Write a Python Program to Print the Fibonacci sequence?"""

def fibonacci_sequence(n):
    fib_seq = [0, 1]
    while len(fib_seq) < n:
        next_num = fib_seq[-1] + fib_seq[-2]
        fib_seq.append(next_num)
    return fib_seq

try:
    num_terms = int(input("Enter the number of terms in the Fibonacci sequence: "))
    if num_terms <= 0:
        print("Number of terms should be a positive integer.")
    else:
        sequence = fibonacci_sequence(num_terms)
        print("Fibonacci Sequence:")
        print(sequence)
except ValueError:
    print("Invalid input. Please enter a valid positive integer.")

"""4. Write a Python Program to Check Armstrong Number?"""

def is_armstrong_number(num):
    num_str = str(num)
    num_digits = len(num_str)
    sum_of_digits = sum(int(digit) ** num_digits for digit in num_str)
    return num == sum_of_digits

try:
    num = int(input("Enter a number to check if it's an Armstrong number: "))
    if is_armstrong_number(num):
        print(f"{num} is an Armstrong number.")
    else:
        print(f"{num} is not an Armstrong number.")
except ValueError:
    print("Invalid input. Please enter a valid integer.")

"""5. Write a Python Program to Find Armstrong Number in an Interval?"""

def is_armstrong_number(num):
    num_str = str(num)
    num_digits = len(num_str)
    sum_of_digits = sum(int(digit) ** num_digits for digit in num_str)
    return num == sum_of_digits

def find_armstrong_numbers_in_interval(start, end):
    armstrong_numbers = []
    for num in range(start, end + 1):
        if is_armstrong_number(num):
            armstrong_numbers.append(num)
    return armstrong_numbers

try:
    start = int(input("Enter the starting number of the interval: "))
    end = int(input("Enter the ending number of the interval: "))
    if start > end:
        print("Invalid input. Starting number should be less than or equal to the ending number.")
    else:
        armstrong_nums = find_armstrong_numbers_in_interval(start, end)
        if armstrong_nums:
            print("Armstrong numbers in the interval:")
            print(armstrong_nums)
        else:
            print("No Armstrong numbers found in the interval.")
except ValueError:
    print("Invalid input. Please enter valid integers for the interval.")

"""6. Write a Python Program to Find the Sum of Natural Numbers?"""

def sum_of_natural_numbers(n):
    return (n * (n + 1)) // 2

try:
    num = int(input("Enter a positive integer to find the sum of natural numbers up to that number: "))
    if num <= 0:
        print("Please enter a positive integer.")
    else:
        result = sum_of_natural_numbers(num)
        print(f"The sum of natural numbers up to {num} is {result}.")
except ValueError:
    print("Invalid input. Please enter a valid positive integer.")